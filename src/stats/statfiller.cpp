#pragma once
#include "stats/statfiller.h"

using StatsValue = constants::StatsValue;
using ActorValue = RE::ActorValue;

Filler* Filler::GetSingleton() {
	static Filler singleton;
	return addressof(singleton);
}

vector<StatItem> Filler::getData() {
	Filler::statList = {
		{StatsValue::name, ActorValue::kNone, *Settings::nameString, *Settings::nameStringEnding, *Settings::name},
		{StatsValue::race, ActorValue::kNone, *Settings::raceString, *Settings::raceStringEnding, *Settings::race},
		{StatsValue::level, ActorValue::kNone, *Settings::levelString, *Settings::levelStringEnding, *Settings::level},
		{StatsValue::perkCount, ActorValue::kNone, *Settings::perkCountString, *Settings::perkCountStringEnding, *Settings::perkCount},
		{StatsValue::height, ActorValue::kNone, *Settings::heightString, *Settings::heightStringEnding, *Settings::height},
		{StatsValue::equipedWeight, ActorValue::kNone, *Settings::equipedWeightString, *Settings::equipedWeightStringEnding, *Settings::equipedWeight},
		{StatsValue::weight, ActorValue::kNone, *Settings::weightString, *Settings::weightStringEnding, *Settings::weight},
		{StatsValue::armor, ActorValue::kNone, *Settings::armorString, *Settings::armorStringEnding, *Settings::armor},
		{StatsValue::damage, ActorValue::kNone, *Settings::damageString, *Settings::damageStringEnding, *Settings::damage},
		{StatsValue::skillTrainingsThisLevel, ActorValue::kNone, *Settings::skillTrainingsThisLevelString, *Settings::skillTrainingsThisLevelStringEnding, *Settings::skillTrainingsThisLevel},
		{StatsValue::health, ActorValue::kHealth, *Settings::healthString, *Settings::healthStringEnding, *Settings::health},
		{StatsValue::healthRatePer, ActorValue::kNone, *Settings::healthRateString, *Settings::healthRateStringEnding, *Settings::healthRate},
		{StatsValue::magicka, ActorValue::kMagicka, *Settings::magickaString, *Settings::magickaStringEnding, *Settings::magicka},
		{StatsValue::magickaRatePer, ActorValue::kNone, *Settings::magickaRateString, *Settings::magickaRateStringEnding, *Settings::magickaRate},
		{StatsValue::stamina, ActorValue::kStamina, *Settings::staminaString, *Settings::staminaStringEnding, *Settings::stamina},
		{StatsValue::staminaRatePer, ActorValue::kNone, *Settings::staminaRateString, *Settings::staminaRateStringEnding, *Settings::staminaRate},
		{StatsValue::resistDamage, ActorValue::kDamageResist, *Settings::resistDamageString, *Settings::resistDamageStringEnding, *Settings::resistDamage},
		{StatsValue::resistDisease, ActorValue::kResistDisease, *Settings::resistDiseaseString, *Settings::resistDiseaseStringEnding, *Settings::resistDisease},
		{StatsValue::resistPoison, ActorValue::kPoisonResist, *Settings::restorationModString, *Settings::resistPoisonStringEnding, *Settings::resistPoison},
		{StatsValue::resistFire, ActorValue::kResistFire, *Settings::resistFireString, *Settings::resistFireStringEnding, *Settings::resistFire},
		{StatsValue::resistShock, ActorValue::kResistShock, *Settings::resistShockString, *Settings::resistShockStringEnding, *Settings::resistShock},
		{StatsValue::resistFrost, ActorValue::kResistFrost, *Settings::resistFrostString, *Settings::resistFrostStringEnding, *Settings::resistFrost},
		{StatsValue::resistMagic, ActorValue::kResistMagic, *Settings::resistMagicString, *Settings::resistMagicStringEnding, *Settings::resistMagic},
		{StatsValue::oneHanded, ActorValue::kOneHanded, *Settings::oneHandedString, *Settings::oneHandedStringEnding, *Settings::oneHanded},
		{StatsValue::twoHanded, ActorValue::kTwoHanded, *Settings::twoHandedString, *Settings::twoHandedStringEnding, *Settings::twoHanded},
		{StatsValue::archery, ActorValue::kArchery, *Settings::archeryString, *Settings::archeryStringEnding, *Settings::archery},
		{StatsValue::block, ActorValue::kBlock, *Settings::blockString, *Settings::blockStringEnding, *Settings::block},
		{StatsValue::smithing, ActorValue::kSmithing, *Settings::smithingString, *Settings::smithingStringEnding, *Settings::smithing},
		{StatsValue::heavyArmor, ActorValue::kHeavyArmor, *Settings::heavyArmorString, *Settings::heavyArmorStringEnding, *Settings::heavyArmor},
		{StatsValue::lightArmor, ActorValue::kLightArmor, *Settings::lightArmorString, *Settings::lightArmorStringEnding, *Settings::lightArmor},
		{StatsValue::pickpocket, ActorValue::kPickpocket, *Settings::pickpocketString, *Settings::pickpocketStringEnding, *Settings::pickpocket},
		{StatsValue::lockpicking, ActorValue::kLockpicking, *Settings::lockpickingString, *Settings::lockpickingStringEnding, *Settings::lockpicking},
		{StatsValue::sneak, ActorValue::kSneak, *Settings::sneakString, *Settings::sneakStringEnding, *Settings::sneak},
		{StatsValue::alchemy, ActorValue::kAlchemy, *Settings::alchemyString, *Settings::alchemyStringEnding, *Settings::alchemy},
		{StatsValue::speech, ActorValue::kSpeech, *Settings::speechString, *Settings::speechStringEnding, *Settings::speech},
		{StatsValue::enchanting, ActorValue::kEnchanting, *Settings::enchantingString, *Settings::enchantingStringEnding, *Settings::enchanting},
		{StatsValue::alteration, ActorValue::kAlteration, *Settings::alterationString, *Settings::alterationStringEnding, *Settings::alteration},
		{StatsValue::conjuration, ActorValue::kConjuration, *Settings::conjurationString, *Settings::conjurationStringEnding, *Settings::conjuration},
		{StatsValue::destruction, ActorValue::kDestruction, *Settings::destructionString, *Settings::destructionStringEnding, *Settings::destruction},
		{StatsValue::illusion, ActorValue::kIllusion, *Settings::illusionString, *Settings::illusionStringEnding, *Settings::illusion},
		{StatsValue::restoration, ActorValue::kRestoration, *Settings::restorationString, *Settings::restorationStringEnding, *Settings::restoration},
		{StatsValue::oneHandedPowerMod, ActorValue::kOneHandedPowerModifier, *Settings::oneHandedPowerModString, *Settings::oneHandedPowerModStringEnding, *Settings::oneHandedPowerMod},
		{StatsValue::twoHandedPowerMod, ActorValue::kTwoHandedPowerModifier, *Settings::twoHandedPowerModString, *Settings::twoHandedPowerModStringEnding, *Settings::twoHandedPowerMod},
		{StatsValue::archeryPowerMod, ActorValue::kMarksmanPowerModifier, *Settings::archeryPowerModString, *Settings::archeryPowerModStringEnding, *Settings::archeryPowerMod},
		{StatsValue::blockPowerMod, ActorValue::kBlockPowerModifier, *Settings::blockPowerModString, *Settings::blockPowerModStringEnding, *Settings::blockPowerMod},
		{StatsValue::smithingPowerMod, ActorValue::kSmithingPowerModifier, *Settings::smithingPowerModString, *Settings::smithingPowerModStringEnding, *Settings::smithingPowerMod},
		{StatsValue::heavyArmorPowerMod, ActorValue::kHeavyArmorPowerModifier, *Settings::heavyArmorPowerModString, *Settings::heavyArmorPowerModStringEnding, *Settings::heavyArmorPowerMod},
		{StatsValue::lightArmorPowerMod, ActorValue::kLightArmorPowerModifier, *Settings::lightArmorPowerModString, *Settings::lightArmorPowerModStringEnding, *Settings::lightArmorPowerMod},
		{StatsValue::pickpocketPowerMod, ActorValue::kPickpocketPowerModifier, *Settings::pickpocketPowerModString, *Settings::pickpocketPowerModStringEnding, *Settings::pickpocketPowerMod},
		{StatsValue::lockpickingPowerMod, ActorValue::kLockpickingPowerModifier, *Settings::lockpickingPowerModString, *Settings::lockpickingPowerModStringEnding, *Settings::lockpickingPowerMod},
		{StatsValue::sneakPowerMod, ActorValue::kSneakingPowerModifier, *Settings::sneakPowerModString, *Settings::sneakPowerModStringEnding, *Settings::sneakPowerMod},
		{StatsValue::alchemyPowerMod, ActorValue::kAlchemyPowerModifier, *Settings::alchemyPowerModString, *Settings::alchemyPowerModStringEnding, *Settings::alchemyPowerMod},
		{StatsValue::speechPowerMod, ActorValue::kSpeechcraftPowerModifier, *Settings::speechPowerModString, *Settings::speechPowerModStringEnding, *Settings::speechPowerMod},
		{StatsValue::enchantingPowerMod, ActorValue::kEnchantingPowerModifier, *Settings::enchantingPowerModString, *Settings::enchantingPowerModStringEnding, *Settings::enchantingPowerMod},
		{StatsValue::alterationPowerMod, ActorValue::kAlterationPowerModifier, *Settings::alterationPowerModString, *Settings::alterationPowerModStringEnding, *Settings::alterationPowerMod},
		{StatsValue::conjurationPowerMod, ActorValue::kConjurationPowerModifier, *Settings::conjurationPowerModString, *Settings::conjurationPowerModStringEnding, *Settings::conjurationPowerMod},
		{StatsValue::destructionPowerMod, ActorValue::kDestructionPowerModifier, *Settings::destructionPowerModString, *Settings::destructionPowerModStringEnding, *Settings::destructionPowerMod},
		{StatsValue::illusionPowerMod, ActorValue::kIllusionPowerModifier, *Settings::illusionPowerModString, *Settings::illusionPowerModStringEnding, *Settings::illusionPowerMod},
		{StatsValue::restorationPowerMod, ActorValue::kRestorationPowerModifier, *Settings::restorationPowerModString, *Settings::restorationPowerModStringEnding, *Settings::restorationPowerMod},
		{StatsValue::speedMult, ActorValue::kSpeedMult, *Settings::speedMultString, *Settings::speedMultStringEnding, *Settings::speedMult},
		{StatsValue::inventoryWeight, ActorValue::kInventoryWeight, *Settings::inventoryWeightString, *Settings::inventoryWeightStringEnding, *Settings::inventoryWeight},
		{StatsValue::carryWeight, ActorValue::kCarryWeight, *Settings::carryWeightString, *Settings::carryWeightStringEnding, *Settings::carryWeight},
		{StatsValue::criticalChance, ActorValue::kCriticalChance, *Settings::criticalChanceString, *Settings::criticalChanceStringEnding, *Settings::criticalChance},
		{StatsValue::meleeDamage, ActorValue::kMeleeDamage, *Settings::meleeDamageString, *Settings::meleeDamageStringEnding, *Settings::meleeDamage},
		{StatsValue::unarmedDamage, ActorValue::kUnarmedDamage, *Settings::unarmedDamageString, *Settings::unarmedDamageStringEnding, *Settings::unarmedDamage},
		{StatsValue::absorbChance, ActorValue::kAbsorbChance, *Settings::absorbChanceString, *Settings::absorbChanceStringEnding, *Settings::absorbChance},
		//we will not set the actor value kWeaponSpeedMult and kLeftWeaponSpeedMultiply here, because some genius thought it is nice that the value 0 and 1 means 100%
		// https://en.uesp.net/wiki/Skyrim_Mod:Actor_Value_Indices as documented here
		{StatsValue::weaponSpeedMult, ActorValue::kNone, *Settings::weaponSpeedMultString, *Settings::weaponSpeedMultStringEnding, *Settings::weaponSpeedMult},
		{StatsValue::leftWeaponSpeedMult, ActorValue::kNone, *Settings::leftWeaponSpeedMultString, *Settings::leftWeaponSpeedMultStringEnding, *Settings::leftWeaponSpeedMult},
		{StatsValue::rightItemCharge, ActorValue::kRightItemCharge, *Settings::rightItemChargeString, *Settings::rightItemChargeStringEnding, *Settings::rightItemCharge},
		{StatsValue::leftItemCharge, ActorValue::kLeftItemCharge, *Settings::leftItemChargStringe, *Settings::leftItemChargStringeEnding, *Settings::leftItemCharge},
		{StatsValue::armorPerks, ActorValue::kArmorPerks, *Settings::armorPerksString, *Settings::damageArrowStringEnding, *Settings::armorPerks},
		{StatsValue::mass, ActorValue::kMass, *Settings::massString, *Settings::massStringEnding, *Settings::mass},
		{StatsValue::bowStaggerBonus, ActorValue::kBowStaggerBonus, *Settings::bowStaggerBonusString, *Settings::bowStaggerBonusStringEnding, *Settings::bowStaggerBonus},
		{StatsValue::bypassVendorKeywordCheck, ActorValue::kBypassVendorKeywordCheck, *Settings::bypassVendorKeywordCheckString, *Settings::bypassVendorKeywordCheckStringEnding, *Settings::bypassVendorKeywordCheck},
		{StatsValue::bypassVendorStolenCheck, ActorValue::kBypassVendorStolenCheck, *Settings::bypassVendorStolenCheckString, *Settings::bypassVendorStolenCheckStringEnding, *Settings::bypassVendorStolenCheck},
		{StatsValue::bowSpeedBonus, ActorValue::kBowSpeedBonus, *Settings::bowSpeedBonusString, *Settings::bowSpeedBonusStringEnding, *Settings::bowSpeedBonus},
		{StatsValue::shoutRecoveryMult, ActorValue::kShoutRecoveryMult, *Settings::shoutRecoveryMultString, *Settings::shoutRecoveryMultStringEnding, *Settings::shoutRecoveryMult},
		{StatsValue::movementNoiseMult, ActorValue::kMovementNoiseMult, *Settings::movementNoiseMultString, *Settings::movementNoiseMultStringEnding, *Settings::movementNoiseMult},
		{StatsValue::dragonSouls, ActorValue::kDragonSouls, *Settings::dragonSoulsString, *Settings::dragonSoulsStringEnding, *Settings::dragonSouls},
		{StatsValue::combatHealthRegenMultiply, ActorValue::kCombatHealthRegenMultiply, *Settings::combatHealthRegenMultiplyString, *Settings::combatHealthRegenMultiplyStringEnding, *Settings::combatHealthRegenMultiply},
		{StatsValue::attackDamageMult, ActorValue::kAttackDamageMult, *Settings::attackDamageMultString, *Settings::attackDamageMultStringEnding, *Settings::attackDamageMult},
		{StatsValue::beast, ActorValue::kNone, *Settings::beastString, *Settings::beastStringEnding, *Settings::beast},
		{StatsValue::xp, ActorValue::kNone, *Settings::xpString, *Settings::xpStringEnding, *Settings::xp, true},
		{StatsValue::reflectDamage, ActorValue::kReflectDamage, *Settings::reflectDamageString, *Settings::reflectDamageStringEnding, *Settings::reflectDamage},
		{StatsValue::oneHandedMod, ActorValue::kOneHandedModifier, *Settings::oneHandedModString, *Settings::oneHandedModStringEnding, *Settings::oneHandedMod},
		{StatsValue::twoHandedMod, ActorValue::kTwoHandedModifier, *Settings::twoHandedModString, *Settings::twoHandedModStringEnding, *Settings::twoHandedMod},
		{StatsValue::marksmanMod, ActorValue::kMarksmanModifier, *Settings::archeryModString, *Settings::archeryModStringEnding, *Settings::archeryMod},
		{StatsValue::blockMod, ActorValue::kBlockModifier, *Settings::blockModString, *Settings::blockModStringEnding, *Settings::blockMod},
		{StatsValue::smithingMod, ActorValue::kSmithingModifier, *Settings::smithingModString, *Settings::smithingModStringEnding, *Settings::smithingMod},
		{StatsValue::heavyArmorMod, ActorValue::kHeavyArmorModifier, *Settings::heavyArmorModString, *Settings::heavyArmorModStringEnding, *Settings::heavyArmorMod},
		{StatsValue::lightArmorMod, ActorValue::kLightArmorModifier, *Settings::lightArmorModString, *Settings::lightArmorModStringEnding, *Settings::lightArmorMod},
		{StatsValue::pickpocketMod, ActorValue::kPickpocketModifier, *Settings::pickpocketModString, *Settings::pickpocketModStringEnding, *Settings::pickpocketMod},
		{StatsValue::lockpickingMod, ActorValue::kLockpickingModifier, *Settings::lockpickingModString, *Settings::lockpickingModStringEnding, *Settings::lockpickingMod},
		{StatsValue::sneakingMod, ActorValue::kSneakingModifier, *Settings::sneakModString, *Settings::sneakModStringEnding, *Settings::sneakMod},
		{StatsValue::alchemyMod, ActorValue::kAlchemyModifier, *Settings::alchemyModString, *Settings::alchemyModStringEnding, *Settings::alchemyMod},
		{StatsValue::speechcraftMod, ActorValue::kSpeechcraftModifier, *Settings::speechModString, *Settings::speechModStringEnding, *Settings::speechMod},
		{StatsValue::enchantingMod, ActorValue::kEnchantingModifier, *Settings::enchantingModString, *Settings::enchantingModStringEnding, *Settings::enchantingMod},
		{StatsValue::alterationMod, ActorValue::kAlterationModifier, *Settings::alterationModString, *Settings::alterationModStringEnding, *Settings::alterationMod},
		{StatsValue::conjurationMod, ActorValue::kConjurationModifier, *Settings::conjurationModString, *Settings::conjurationModStringEnding, *Settings::conjurationMod},
		{StatsValue::destructionMod, ActorValue::kDestructionModifier, *Settings::destructionModString, *Settings::destructionModStringEnding, *Settings::destructionMod},
		{StatsValue::illusionMod, ActorValue::kIllusionModifier, *Settings::illusionModString, *Settings::illusionModStringEnding, *Settings::illusionMod},
		{StatsValue::restorationMod, ActorValue::kRestorationModifier, *Settings::restorationModString, *Settings::restorationModStringEnding, *Settings::restorationMod},
		{StatsValue::damageArrow, ActorValue::kNone, *Settings::damageArrowString, *Settings::damageArrowStringEnding, *Settings::damageArrow},
		{StatsValue::damageLeft, ActorValue::kNone, *Settings::damageLeftString, *Settings::damageLeftStringEnding, *Settings::damageLeft},
		{StatsValue::darkbrotherHood, ActorValue::kNone, "", "", false},
		{StatsValue::thiefsGuild, ActorValue::kNone, "", "", false},
		{StatsValue::orcFriend, ActorValue::kNone, "", "", false},
		{StatsValue::collegeOfWinterhold, ActorValue::kNone, "", "", false},
		{StatsValue::companions, ActorValue::kNone, "", "", false},
		{StatsValue::imperialLegion, ActorValue::kNone, "", "", false},
		{StatsValue::stormcloaks, ActorValue::kNone, "", "", false},
		{StatsValue::greybeard, ActorValue::kNone, "", "", false},
	};


	return Filler::statList;
}

void Filler::PrintStatsVector(vector<StatItem>& p_vec) {
	logger::debug("Vector Size is {}"sv, p_vec.size());
	for (auto& element : p_vec) {
		logger::trace("name {}, actor {}, value {}, displayname ({}), ending {}, show {}, guiText ({}), ST {}"sv,
			element.getName(),
			element.getActor(),
			element.getValue(),
			element.getDisplayName(),
			element.getEnding(),
			element.getShow(),
			element.getGuiText(),
			element.getStaticText());
	}
}